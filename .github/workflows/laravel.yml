name: Laravel

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install NPM Dependencies (prod)
        run: npm install --frozen-lockfile

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit

      - name: Create file status_job01.txt and write the job status into it
        if: always()
        run: |
          echo ${{ job.status }} > status_job01.txt

      - name: Upload file status_job01.txt as an artifact
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: pass_status_job01
          path: status_job01.txt

      
  notifications:
    runs-on: ubuntu-latest
    steps:

    - name: Download artifact pass_status_job01
      uses: actions/download-artifact@v1
      with:
        name: pass_status_job01

    - name: Set the statuses of Job 01 and Job 02 as output parameters
      id: set_outputs
      run: |
        echo "::set-output name=status_job01::$(<pass_status_job01/status_job01.txt)"

      - name: Discord Commits
      env:
        teststatus: ${{ steps.set_outputs.outputs.status_job01 }}
      uses: Sniddl/discord-commits@v1.2
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        message: "**{{ env.teststatus }}** commit to `{{ github.context.payload.repository.owner.name }}/{{ github.context.payload.repository.name}}`.\nDiff: {{ github.context.payload.compare }}"
        embed: '{ "title": "{{ commit.title }}", "description": "{{ commit.description }}", "url": "{{ commit.url }}", "author": { "name": "{{ commit.author.name }} ({{ commit.author.username }})", "icon_url": "https://avatars.io/gravatar/{{ commit.author.email }}"} }'